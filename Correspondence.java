/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// camel-k: language=java

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.component.kafka.KafkaComponent;
import org.apache.camel.Exchange;
import org.apache.camel.Processor;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.Date;
import org.apache.camel.*;
import java.util.*;



import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.apache.camel.component.kafka.KafkaComponent;




public class Correspondence extends RouteBuilder {
    private String consumerMaxPollRecords = "50000";
    private String consumerCount = "3";
    private String consumerSeekTo = "beginning";
    private String consumerGroup = "correspondence";
    private  String kafkaBootstrap = "my-cluster-kafka-brokers.dm-kafka.svc.cluster.local:9092";
    @Override
    public void configure() throws Exception {
        rest("/sd-correspondence/correspondencev2")
                .post("/correspondence/activation")
                .id("activateSDCorrespondence")
                .description("Activate  a  SDCorrespondence servicing session")
                .produces("application/json")
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("SDCorrespondence Request Payload")
                .endParam()
                .to("direct:activateSDCorrespondence")
                .put("/correspondence/{sd-reference-id}/configuration")
                .id("configureSDCorrespondence")
                .description("Update an active SDCorrespondence session configuration")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("SDCorrespondence Servicing Session Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("SDCorrespondence Configure Request Payload")
                .endParam()
                .to("direct:configureSDCorrespondence")
                .put("/correspondence/{sd-reference-id}/feedback")
                .id("feedbackSDCorrespondence")
                .description("Capturing feedback against the SDCorrespondence service that can target different levels of detail: SD/CR/BQ")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("SDCorrespondence Servicing Session Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("SDCorrespondence Feedback Request Payload")
                .endParam()
                .to("direct:feedbackSDCorrespondence")
                .get("/correspondence/{sd-reference-id}")
                .id("retrieveSDCorrespondence")
                .description("Analytical views maintained by the SDCorrespondence service center for management reporting and analysis purposes")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("SDCorrespondence Servicing Session Reference")
                .endParam()
                .param()
                .name("queryparams")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Query params from schema '#/definitions/SDCorrespondenceRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveSDCorrespondence")
                .post("/correspondence/{sd-reference-id}/correspondence-operating-session/initiation")
                .id("initiateCorrespondenceOperatingSession")
                .description("Initiate the correspondence operational facility")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("CorrespondenceOperatingSession Request Payload")
                .endParam()
                .to("direct:initiateCorrespondenceOperatingSession")
                .put("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/update")
                .id("updateCorrespondenceOperatingSession")
                .description("Update settings and details of the operating session (e.g. change priorities)")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Correspondence Operating Session Request Payload")
                .endParam()
                .to("direct:updateCorrespondenceOperatingSession")
                .put("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/control")
                .id("controlCorrespondenceOperatingSessionUpdate")
                .description("Control the session (e.g. suspend incoming mail)")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Correspondence Operating Session Request Payload")
                .endParam()
                .to("direct:controlCorrespondenceOperatingSessionUpdate")
                .put("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/exchange")
                .id("exchangeCorrespondenceOperatingSessionUpdate")
                .description("Execute an automated task (e.g. statistical analysis)")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Correspondence Operating Session Request Payload")
                .endParam()
                .to("direct:exchangeCorrespondenceOperatingSessionUpdate")
                .put("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/requisition")
                .id("requestCorrespondenceOperatingSessionUpdate")
                .description("Request manual intervention (e.g. handle lost, wrongly addressed correspondence)")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Correspondence Operating Session Request Payload")
                .endParam()
                .to("direct:requestCorrespondenceOperatingSessionUpdate")
                .get("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}")
                .id("retrieveCorrespondence")
                .description("Retrieve details about the correspondence session")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("queryparams")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Query params from schema '#/definitions/CRCorrespondenceOperatingSessionRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCorrespondence")
                .put("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/outbound/{bq-reference-id}/update")
                .id("updateCorrespondenceOperatingSessionOutbound")
                .description("Update details of an outbound correspondence item")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Outbound Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Outbound Request Payload")
                .endParam()
                .to("direct:updateCorrespondenceOperatingSessionOutbound")
                .get("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/outbound/{bq-reference-id}/")
                .id("retrieveCorrespondenceOperatingSessionOutbound")
                .description("Retrieve details about an outbound correspondence item .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Outbound Instance Reference")
                .endParam()
                .param()
                .name("queryparams")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Query params from schema '#/definitions/BQOutboundRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCorrespondenceOperatingSessionOutbound")
                .post("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/outboundwithresponse/initiation")
                .id("initiateCorrespondenceOperatingSessionOutboundWithResponse")
                .description("Initiate processing outbound correspondence with tracked response")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Correspondence Operating Session Request Payload")
                .endParam()
                .to("direct:initiateCorrespondenceOperatingSessionOutboundWithResponse")
                .put("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/outboundwithresponse/{bq-reference-id}/update")
                .id("updateCorrespondenceOperatingSessionOutboundWithResponse")
                .description("Update details of an outbound correspondence with tracked response")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("OutboundWithResponse Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("OutboundWithResponse Request Payload")
                .endParam()
                .to("direct:updateCorrespondenceOperatingSessionOutboundWithResponse")
                .get("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/outboundwithresponse/{bq-reference-id}/")
                .id("retrieveCorrespondenceOperatingSessionOutboundWithResponse")
                .description("Retrieve details about an outbound correspondence with tracked response .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("OutboundWithResponse Instance Reference")
                .endParam()
                .param()
                .name("queryparams")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Query params from schema '#/definitions/BQOutboundWithResponseRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCorrespondenceOperatingSessionOutboundWithResponse")
                .post("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/inbound/initiation")
                .id("initiateCorrespondenceOperatingSessionInbound")
                .description("Initiate processing of an inbound correspondence item")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Correspondence Operating Session Request Payload")
                .endParam()
                .to("direct:initiateCorrespondenceOperatingSessionInbound")
                .put("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/inbound/{bq-reference-id}/update")
                .id("updateCorrespondenceOperatingSessionInbound")
                .description("Update details of an inbound correspondence item")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Inbound Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Inbound Request Payload")
                .endParam()
                .to("direct:updateCorrespondenceOperatingSessionInbound")
                .get("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/inbound/{bq-reference-id}/")
                .id("retrieveCorrespondenceOperatingSessionInbound")
                .description("Retrieve details about an inbound correspondence item .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Inbound Instance Reference")
                .endParam()
                .param()
                .name("queryparams")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Query params from schema '#/definitions/BQInboundRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCorrespondenceOperatingSessionInbound")
                .post("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/blockmailing/initiation")
                .id("initiateCorrespondenceOperatingSessionBlockMailing")
                .description("Initiate processing an outbound correspondence block")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Correspondence Operating Session Request Payload")
                .endParam()
                .to("direct:initiateCorrespondenceOperatingSessionBlockMailing")
                .put("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/blockmailing/{bq-reference-id}/update")
                .id("updateCorrespondenceOperatingSessionBlockMailing")
                .description("Update details of an outbound correspondence block")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("BlockMailing Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("BlockMailing Request Payload")
                .endParam()
                .to("direct:updateCorrespondenceOperatingSessionBlockMailing")
                .get("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/blockmailing/{bq-reference-id}/")
                .id("retrieveCorrespondenceOperatingSessionBlockMailing")
                .description("Retrieve details about an outbound correspondence block .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("BlockMailing Instance Reference")
                .endParam()
                .param()
                .name("queryparams")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Query params from schema '#/definitions/BQBlockMailingRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCorrespondenceOperatingSessionBlockMailing")
                .get("/correspondence/{sd-reference-id}/correspondence-operating-session")
                .id("RetrieveCorrespondenceReferenceIds")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("collection-filter")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Filter to refine the result set. ex- Correspondence Instance Status='active'")
                .endParam()
                .to("direct:RetrieveCorrespondenceReferenceIds")
                .get("/correspondence/correspondence-operating-session/behavior-qualifiers/")
                .id("RetrieveCorrespondenceBehaviorQualifiers")
                .produces("application/json")
                .to("direct:RetrieveCorrespondenceBehaviorQualifiers")
                .get("/correspondence/{sd-reference-id}/correspondence-operating-session/{cr-reference-id}/{behavior-qualifier}/")
                .id("RetrieveCorrespondenceBehaviorQualifierReferenceIds")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Correspondence Operating Session Instance Reference")
                .endParam()
                .param()
                .name("behavior-qualifier")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Behavior Qualifier Name. ex- BlockMailing")
                .endParam()
                .param()
                .name("collection-filter")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Filter to refine the result set. ex- BlockMailing Instance Status = 'pending'")
                .endParam()
                .to("direct:RetrieveCorrespondenceBehaviorQualifierReferenceIds");

        rest("/sd-correspondence/correspondencev2")
                    .post("/correspondence/{sdreferenceid}/correspondence-operating-session/{crreferenceid}/outbound/initiation")
                    .id("initiateCorrespondenceOperatingSessionOutbound")
                    .route()
                .log("${header.sdreferenceid}")
                    .bean(new NotificationProcessor(),"processNotification(\"${body}\",\"${header.sdreferenceid}\")")
                    .removeHeader("*")
                .setHeader(Exchange.HTTP_METHOD, simple("POST"))
                .setHeader("Content-Type", simple("application/json"))
                .setHeader("Accept", simple("application/json"))
                .setHeader("x-apikey", simple("dd4f75effe46de39bc01f6ee380ef09170097"))
                .toD("https://maildb-15b5.restdb.io/mail/?bridgeEndpoint=true")
        .log("${body}")
                    ;


    }



    private final class NotificationProcessor{

        public String processNotification(String body, String header) throws Exception {
          String mailBody = "Thank you for being a valued customer!Your account payment due is fast approaching, you can enable auto pay to make hassle free payments every month. \n If you are facing financial hardship, talk to our Credit Counseler today to see how you can manage your debt.<div><br></div><div>&lt;a href=\"\"&gt;Click here to lear more&lt;/a&gt;</div>";
            String request = "{\n" +
                    "    \"to\":\"sadhana.nandakumar@gmail.com\",\n" +
                    "    \"subject\":\"Your payment due date is approaching!\",\n" +
                    "    \"html\": \"<b>Thank you for being a valued customer! </b><br/><br/> Your account payment due is fast approaching, you can enable auto pay to make hassle free payments every month. <br/> <hr/> <br/> If you are facing financial hardship, talk to our Credit Counseler today to see how you can manage your debt. <br/> www.acmecred.com \",\n" +
                    "    \"company\": \"Acme Inc\",\n" +
                    "    \"sendername\": \"Acme customer support\"\n" +
                    "}";




            return request;
        }
    }


}