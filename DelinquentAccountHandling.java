/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// camel-k: language=java

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.component.kafka.KafkaComponent;
import org.apache.camel.Exchange;
import org.apache.camel.Processor;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.Date;
import org.apache.camel.*;
import java.util.*;


import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.apache.camel.component.kafka.KafkaComponent;




public class DelinquentAccountHandling extends RouteBuilder {



    @Override
    public void configure() throws Exception {
        rest("/sd-dlnqt-acct-hndlng/v2")
                .post("/delinquent-account-handling/activation")
                .id("activateSDDelinquentAccountHandling")
                .description("Activate  a  SDDelinquentAccountHandling servicing session")
                .produces("application/json")
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("SDDelinquentAccountHandling Request Payload")
                .endParam()
                .to("direct:activateSDDelinquentAccountHandling")
                .put("/delinquent-account-handling/{sd-reference-id}/configuration")
                .id("configureSDDelinquentAccountHandling")
                .description("Update an active SDDelinquentAccountHandling session configuration")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("SDDelinquentAccountHandling Servicing Session Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("SDDelinquentAccountHandling Configure Request Payload")
                .endParam()
                .to("direct:configureSDDelinquentAccountHandling")
                .put("/delinquent-account-handling/{sd-reference-id}/feedback")
                .id("feedbackSDDelinquentAccountHandling")
                .description("Capturing feedback against the SDDelinquentAccountHandling service that can target different levels of detail: SD/CR/BQ")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("SDDelinquentAccountHandling Servicing Session Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("SDDelinquentAccountHandling Feedback Request Payload")
                .endParam()
                .to("direct:feedbackSDDelinquentAccountHandling")
                .get("/delinquent-account-handling/{sd-reference-id}")
                .id("retrieveSDDelinquentAccountHandling")
                .description("Analytical views maintained by the SDDelinquentAccountHandling service center for management reporting and analysis purposes")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("SDDelinquentAccountHandling Servicing Session Reference")
                .endParam()
                .param()
                .name("queryparams")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Query params from schema '#/definitions/SDDelinquentAccountHandlingRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveSDDelinquentAccountHandling")
                .post("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/initiation")
                .id("initiateDelinquentAccountProcedure")
                .description("Initiate delinquent account processing")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("DelinquentAccountProcedure Request Payload")
                .endParam()
                .to("direct:initiateDelinquentAccountProcedure")
                .put("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/{cr-reference-id}/update")
                .id("updateDelinquentAccountProcedure")
                .description("Update details of delinquent account processing")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Procedure Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Delinquent Account Procedure Request Payload")
                .endParam()
                .to("direct:updateDelinquentAccountProcedure")
                .put("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/{cr-reference-id}/control")
                .id("controlDelinquentAccountProcedureUpdate")
                .description("Control delinquent account process (e.g. escalate)")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Procedure Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Delinquent Account Procedure Request Payload")
                .endParam()
                .to("direct:controlDelinquentAccountProcedureUpdate")
                .put("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/{cr-reference-id}/execution")
                .id("executeDelinquentAccountProcedureUpdate")
                .description("Execute an automated task against an active delinquent account process (e.g. upload transactions)")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Procedure Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Delinquent Account Procedure Request Payload")
                .endParam()
                .to("direct:executeDelinquentAccountProcedureUpdate")
                .get("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/{cr-reference-id}")
                .id("retrieveDelinquentAccountHandling")
                .description("Retrieve details about a delinquent account procedure")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Procedure Instance Reference")
                .endParam()
                .param()
                .name("queryparams")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Query params from schema '#/definitions/CRDelinquentAccountProcedureRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveDelinquentAccountHandling")
                .get("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/{cr-reference-id}/assessment/{bq-reference-id}/")
                .id("retrieveDelinquentAccountProcedureAssessment")
                .description("Retrieve details about a delinquent account assessment .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Procedure Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Assessment Instance Reference")
                .endParam()
                .param()
                .name("queryparams")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Query params from schema '#/definitions/BQAssessmentRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveDelinquentAccountProcedureAssessment")
                .put("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/{cr-reference-id}/contact/{bq-reference-id}/requisition")
                .id("requestDelinquentAccountProcedureContactUpdate")
                .description("Request contact processing for an active delinquent account procedure")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Procedure Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Contact Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Contact request payload")
                .endParam()
                .to("direct:requestDelinquentAccountProcedureContactUpdate")
                .get("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/{cr-reference-id}/contact/{bq-reference-id}/")
                .id("retrieveDelinquentAccountProcedureContact")
                .description("Retrieve details about a contact .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Procedure Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Contact Instance Reference")
                .endParam()
                .param()
                .name("queryparams")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Query params from schema '#/definitions/BQContactRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveDelinquentAccountProcedureContact")
                .post("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/{cr-reference-id}/payment/initiation")
                .id("initiateDelinquentAccountProcedurePayment")
                .description("Initiate payment processing against the delinquent account")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Procedure Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Delinquent Account Procedure Request Payload")
                .endParam()
                .to("direct:initiateDelinquentAccountProcedurePayment")
                .put("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/{cr-reference-id}/payment/{bq-reference-id}/update")
                .id("updateDelinquentAccountProcedurePayment")
                .description("Update a payment transaction")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Procedure Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Payment Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Payment Request Payload")
                .endParam()
                .to("direct:updateDelinquentAccountProcedurePayment")
                .put("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/{cr-reference-id}/payment/{bq-reference-id}/exchange")
                .id("exchangeDelinquentAccountProcedurePaymentUpdate")
                .description("accept, verify, etc. a payment transaction made against the account")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Procedure Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Payment Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Payment request payload")
                .endParam()
                .to("direct:exchangeDelinquentAccountProcedurePaymentUpdate")
                .get("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/{cr-reference-id}/payment/{bq-reference-id}/")
                .id("retrieveDelinquentAccountProcedurePayment")
                .description("Retrieve details about a payment made against the delinquent account .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Procedure Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Payment Instance Reference")
                .endParam()
                .param()
                .name("queryparams")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Query params from schema '#/definitions/BQPaymentRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveDelinquentAccountProcedurePayment")
                .put("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/{cr-reference-id}/resolution/{bq-reference-id}/update")
                .id("updateDelinquentAccountProcedureResolution")
                .description("Update a resolution plan")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Procedure Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Resolution Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Resolution Request Payload")
                .endParam()
                .to("direct:updateDelinquentAccountProcedureResolution")
                .put("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/{cr-reference-id}/resolution/{bq-reference-id}/exchange")
                .id("exchangeDelinquentAccountProcedureResolutionUpdate")
                .description("Accept, verify a resolution plan")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Procedure Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Resolution Instance Reference")
                .endParam()
                .param()
                .name("body")
                .type(RestParamType.body)
                .required(true)
                .description("Resolution request payload")
                .endParam()
                .to("direct:exchangeDelinquentAccountProcedureResolutionUpdate")
                .get("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/{cr-reference-id}/resolution/{bq-reference-id}/")
                .id("retrieveDelinquentAccountProcedureResolution")
                .description("Retrieve details about a delinquent account recovery plan .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Procedure Instance Reference")
                .endParam()
                .param()
                .name("bq-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Resolution Instance Reference")
                .endParam()
                .param()
                .name("queryparams")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Query params from schema '#/definitions/BQResolutionRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveDelinquentAccountProcedureResolution")
                .get("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure")
                .id("RetrieveDelinquentAccountHandlingReferenceIds")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("collection-filter")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Filter to refine the result set. ex- DelinquentAccountHandling Instance Status='active'")
                .endParam()
                .to("direct:RetrieveDelinquentAccountHandlingReferenceIds")
                .get("/delinquent-account-handling/delinquent-account-procedure/behavior-qualifiers/")
                .id("RetrieveDelinquentAccountHandlingBehaviorQualifiers")
                .produces("application/json")
                .to("direct:RetrieveDelinquentAccountHandlingBehaviorQualifiers")
                .get("/delinquent-account-handling/{sd-reference-id}/delinquent-account-procedure/{cr-reference-id}/{behavior-qualifier}/")
                .id("RetrieveDelinquentAccountHandlingBehaviorQualifierReferenceIds")
                .produces("application/json")
                .param()
                .name("sd-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Handling Servicing Session Reference")
                .endParam()
                .param()
                .name("cr-reference-id")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Delinquent Account Procedure Instance Reference")
                .endParam()
                .param()
                .name("behavior-qualifier")
                .type(RestParamType.path)
                .dataType("string")
                .required(true)
                .description("Behavior Qualifier Name. ex- Resolution")
                .endParam()
                .param()
                .name("collection-filter")
                .type(RestParamType.query)
                .dataType("string")
                .required(false)
                .description("Filter to refine the result set. ex- Resolution Instance Status = 'pending'")
                .endParam()
                .to("direct:RetrieveDelinquentAccountHandlingBehaviorQualifierReferenceIds");

        rest("/sd-dlnqt-acct-hndlng/v2")
                        .post("/delinquent-account-handling/{sdreferenceid}/delinquent-account-procedure/{crreferenceid}/contact/initiation")
                        .id("initiateDelinquentAccountProcedureContact")
                        .route()
                        .bean(new ContactProcessor(),"prepareNotificationResponse(\"${body}\")")
                        .log("${body}");
    }

    private final class ContactProcessor {
        public String prepareNotificationResponse(String body) throws Exception{
            String notificationBody = "If you are facing financial hardship, talk to our Credit Counseler today to see how you can manage your debt.";

            HashMap requestMap = new com.fasterxml.jackson.databind.ObjectMapper().readValue(body, java.util.HashMap.class);

            String customerReference = (String)requestMap.get("customerReference");
            Format f = new SimpleDateFormat("MM/dd/yy");
            String strDate = f.format(new Date());

            String responseBodyStart = "{\n" +
                    "  \"delinquentAccountProcedureInstanceRecord\": {\n" +
                    "    \"dateType\": {\n" +
                    "      \"date\": \"09-22-2018\"\n" +
                    "    }\n" +
                    "  },\n" +
                    "  \"delinquentAccountProcessingSchedule\": \"string\",\n" +
                    "  \"contactInstanceReference\": \"CIR784261\",\n" +
                    "  \"contactInitiateActionReference\": \"CIAR749975\",\n" +
                    "  \"contactInitiateActionRecord\": {},\n" +
                    "  \"contactInstanceStatus\": \"string\",\n" +
                    "  \"contactInstanceRecord\": {\n" +
                    "    \"customerDelinquentAccountContactRecord\": {\n" +
                    "      \"contactMessage\": ";
            String messageBody= notificationBody + ",\n" +
                    "      \"contactDate\": \"" + strDate + "\",\n" +
                    "      \"contactResult\": \"string\",\n" +
                    "      \"documentDirectoryEntryInstanceReference\": \"702417\",\n" +
                    "      \"documentContent\": \"string\",\n" +
                    "      \"correspondenceInstanceReference\": \"749863\",\n" +
                    "      \"correspondenceContent\": \"string\"\n" +
                    "    },\n" +
                    "    \"delinquentAccountContactResult\": \"string\",\n" +
                    "    \"delinquentAccountContactWorkProduct\": \"string\"\n" +
                    "  }\n" +
                    "}";
            return notificationBody;
        }
    }


}







